set nocompatible

set matchpairs=(:),{:},[:],<:>

set nobackup

let mapleader = ","
let maplocalleader = ",,"

" Always edit in utf-8:
set encoding=utf-8

" Number of lines to keep above/below cursor
set scrolloff=2

" Indentation without hard tabs
set expandtab
set autoindent
set smartindent
set tabstop=2
set shiftwidth=2

" Show line, column number
set ruler
set laststatus=2

" Show syntax highlighting
syntax on
filetype plugin indent on

" Don't wrap text after a one-letter word
set formatoptions=1

" Folding
set foldenable                      " enable folding
set foldmethod=syntax               " global folding method
set foldlevelstart=99               " folds with level 1 aren't closed

" Color scheme settings
colorscheme gruvbox
set background=dark

set list
"set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
set listchars=tab:>-,trail:~,extends:>,precedes:<



" Pyhon mode
let g:pymode_python = 'python3'
let g:pymode_options_max_line_length = 131

" YAML settings
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType template setlocal ts=2 sts=2 sw=2 expandtab

" Recreate help tags
helptags ALL

" Tooltips for typescript
set ballooneval
autocmd FileType typescript setlocal balloonexpr=tsuquyomi#balloonexpr()

" Mouse
set mouse=a

if executable('pyls')
    " pip install python-language-server
    au User lsp_setup call lsp#register_server({
        \ 'name': 'pyls',
        \ 'cmd': {server_info->['pyls']},
        \ 'allowlist': ['python'],
        \ })
endif

function! s:on_lsp_buffer_enabled() abort
    setlocal omnifunc=lsp#complete
    setlocal signcolumn=yes
    if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
    nmap <buffer> gd <plug>(lsp-definition)
    nmap <buffer> gr <plug>(lsp-references)
    nmap <buffer> gi <plug>(lsp-implementation)
    nmap <buffer> gt <plug>(lsp-type-definition)
    nmap <buffer> <leader>rn <plug>(lsp-rename)
    nmap <buffer> [g <Plug>(lsp-previous-diagnostic)
    nmap <buffer> ]g <Plug>(lsp-next-diagnostic)
    nmap <buffer> K <plug>(lsp-hover)
    " refer to doc to add more commands
endfunction

augroup lsp_install
    au!
    " call s:on_lsp_buffer_enabled only for languages that has the server registered.
    autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END


let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"

